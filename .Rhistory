quarto preview
quarto preview
### Load packages
library(haven)
library(dplyr)
library(psych)
library(qgraph)
library(psychonetrics)
### Load packages
library(haven)
library(dplyr)
library(psych)
library(qgraph)
library(psychonetrics)
library(bootnet)
# Set wd
setwd("~/Desktop/UngData")
## Read csv
data <- read.csv("Data_131124.csv")
## Subset to relevant columns
data_v2 <- data %>% select(år, skolenivå, kommune, fylke, kjønn, klasse,
klima1, depr1, depr2, depr3, depr4, depr5,
depr6, depr7, depr8, depr9,
atfpro1, atfpro12, atfpro15,
atfpro16,  atfpro18, skolprob4, livetditt)
## Inspect missingness in climate item
sum(is.na(data_v2$klima1))
## Subset to only relevant columns for network estimation
data_sub <- data_v2 %>% select(klasse,kjønn,år,klima1, depr1, depr2, depr3, depr4, depr5,
depr6,
atfpro1, atfpro12, atfpro15,
atfpro16,  atfpro18, skolprob4, livetditt)
# Count "Don't know" responses
table(data_sub$klima1)
sum(data_sub$klima1 == 5, na.rm=T)/sum(!is.na(data_sub$klima1))
# Count missing
sum(is.na(data_sub$klima1))
sum(is.na(data_sub$klima1))/nrow(data_sub)
# Recode 5 to Missing
data_sub$klima1_rec <- ifelse(data_sub$klima1 == 5, NA, data_sub$klima1)
table(data_sub$klima1_rec)
## Check if "år" predicts klima1_rec
lm_klima1 <- lm(klima1_rec ~ as.factor(år), data = data_sub)
summary(lm_klima1)
lm_klima2 <- lm(klima1_rec ~ år, data = data_sub)
summary(lm_klima2)
describe(data_sub$klima1_rec)
rm(lm_klima1, lm_klima2)
## Compute mean klima1_rec per year
data_sub %>% group_by(år) %>% summarise(mean_klima1 = mean(klima1_rec, na.rm = TRUE))
head(data_sub)
## Create namesObject for analysis
namesObject <- c("klima1_rec", "depr1", "depr2", "depr3", "depr4", "depr5", "depr6", "atfpro1",
"atfpro12","atfpro15","atfpro16","atfpro18","skolprob4","livetditt")
## Filter if klima1_rec is missing
data_net <- data_sub %>% filter(!is.na(klima1_rec))
## Esimate network with FIML
Net <- ggm(data_net, estimator = "FIML", vars = namesObject) %>% runmodel %>% prune(alpha = 0.01) %>% stepup(alpha = 0.01)
Net
NetMatrix <- Net %>% getmatrix("omega")
colnames(NetMatrix) <- c("ClimWor", "EverEff", "SleeProb", "UnhSad", "Hopeless", "Tense", "Worr", "Shopl",
"Vand","Tagg","NotPay","NightWa","Trua","LifeSat")
rownames(NetMatrix) <- c("ClimWor", "EverEff", "SleeProb", "UnhSad", "Hopeless", "Tense", "Worr", "Shopl",
"Vand","Tagg","NotPay","NightWa","Trua","LifeSat")
print(NetMatrix)
# Create labels object
nodeLabels <- c("ClimWor", "EverEff", "SleeProb", "UnhSad", "Hopeless", "Tense", "Worr", "ShopLif",
"Vandal","Tagging","NotPay","NightWa","Trua", "LifeSat")
nodeNames <- c("Worried about climate change", "Everything is an effort", "Sleep problems", "Unhappy or sad", "Hopelessness about the future", "Feeling tense", "Worrying too much",
"Shoplifting", "Vandalism",  "Illegal tagging", "Avoided paying for activities", "Wandering at night","Truancy",
"Life satisfaction")
groups_obj <- list("Climate change worry" = 1,
"Anxiety and depressive symptoms" = c(2:7),
"Antisocial" = c(8:13),
"Wellbeing" = 14)
## Gender: NIT
data_net_v2 <- data_net %>% select(klasse,kjønn,år, klima1_rec, depr1, depr2, depr3, depr4, depr5,
depr6, atfpro1, atfpro12, atfpro15,
atfpro16,  atfpro18, skolprob4, livetditt)
# Check variables in namesObject
print(namesObject)
mod_het <- psychonetrics::ggm(data_net_v2,
vars = namesObject,
groups = "kjønn",
estimator= "FIML",
verbose = TRUE)
# Run model:
mod_het <- mod_het %>% psychonetrics::runmodel()
# Constrain parameters to be equal (i.e., homogeneity model):
mod_hom <- mod_het %>%
psychonetrics::groupequal("omega") %>%
psychonetrics::runmodel()
# Compare equal (i.e., homogeneous) model to the
# freely estimated (i.e., heterogeneous) model:
psychonetrics::compare(Different = mod_het, Equal = mod_hom)
library(networktools)
?goldbricker
quarto preview
quarto preview
quarto preview
